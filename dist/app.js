"use strict";function e(){var e=document.querySelectorAll(".burger__link"),n=document.querySelectorAll(".burger__link-last-trigger");window.innerWidth<780?(e.forEach((function(e){e.addEventListener("click",(function(){!function(e){var n=document.querySelectorAll(".burger__item"),i=e.nextSibling;null!==i&&(i.style.display="block",n.forEach((function(e){e.classList.add("flip")})),i.classList.add("visible"));i.querySelector(".burger__btn-back").addEventListener("click",(function(){i.style.display="none",n.forEach((function(e){e.classList.remove("flip")})),i.classList.remove("visible")})),t()}(e)}))})),n.forEach((function(e){e.addEventListener("click",(function(){!function(e){var n=document.querySelectorAll(".header__dropdown-menu > li"),i=document.querySelectorAll(".header__dropdown-menu > .header__link"),s=document.querySelectorAll(".header__dropdown-menu"),l=e.nextSibling;null!==l&&(l.style.display="block",n.forEach((function(e){e.classList.add("flip")})),i.forEach((function(e){e.classList.add("flip")})),s.forEach((function(e){e.classList.add("hidden")})),l.classList.add("visible"));l.querySelector(".burger__btn-back").addEventListener("click",(function(){l.style.display="none",l.classList.remove("visible"),n.forEach((function(e){e.classList.remove("flip")})),i.forEach((function(e){e.classList.remove("flip")})),s.forEach((function(e){e.classList.remove("hidden")}))})),t()}(e)}))})),document.body.style.overflow="hidden"):window.innerWidth>780&&(document.body.style.overflow="scroll")}function t(){var e=document.querySelectorAll(".burger__btn-close"),t=document.querySelector(".burger__list");e.forEach((function(e){e.addEventListener("click",(function(){n(),t.classList.contains("visible")&&(t.classList.remove("visible"),t.classList.add("hidden"))}))}))}function n(){var e=document.querySelectorAll(".flip"),t=(document.querySelector(".burger__list.visible"),document.querySelectorAll(".header__dropdown-menu.visible")),n=document.querySelectorAll(".burger__list-last.visible");t.forEach((function(e){e.classList.remove("visible"),e.style.display="none"})),n.forEach((function(e){e.classList.remove("visible"),e.style.display="none"})),e.forEach((function(e){e.classList.remove("flip")})),document.body.style.overflow="scroll"}function i(e){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},i(e)}function s(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,l(i.key),i)}}function l(e){var t=a(e,"string");return"symbol"===i(t)?t:String(t)}function a(e,t){if("object"!==i(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var s=n.call(e,t||"default");if("object"!==i(s))return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}function o(e,t,n){c(e,t),t.set(e,n)}function c(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function r(e,t,n){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return n}function d(e,t){return function(e,t){if(t.get)return t.get.call(e);return t.value}(e,v(e,t,"get"))}function u(e,t,n){return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}(e,v(e,t,"set"),n),n}function v(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}document.addEventListener("DOMContentLoaded",(function(){var t=document.querySelector(".burger__btn");window.addEventListener("resize",(function(){e(),document.body.style.overflow="scroll"})),document.addEventListener("click",(function(e){var t=document.querySelector(".burger__list");t.contains(e.target)||e.target.classList.contains("burger__btn")||(n(),t.classList.remove("visible"),t.classList.add("hidden"),document.body.style.overflow="scroll")})),t.addEventListener("click",(function(){var t;(t=document.querySelector(".burger__list")).classList.contains("hidden")?(t.classList.remove("hidden"),t.classList.add("visible"),e()):t.classList.contains("visible")&&(t.classList.remove("visible"),t.classList.add("hidden"),document.body.style.overflow="scroll",n())}))})),window.addEventListener("DOMContentLoaded",(function(){var e=document.querySelectorAll(".cases__btn");document.querySelector(".cases__content").classList.add("is-open"),e.forEach((function(e,t){e.addEventListener("click",(function(e){e.preventDefault();var t=document.querySelector('.cases__content[data-tab-content="'+this.dataset.tabTrigger+'"]'),n=this.parentNode.parentNode;n.querySelector(".is-open").classList.remove("is-open"),n.querySelector(".is-active").classList.remove("is-active"),t.classList.add("is-open"),this.classList.add("is-active")}))})),new Accordion(".accordion");var t=document.querySelector(".footer__phone-hover"),n=document.querySelector(".footer__mail-hover");t.addEventListener("click",(function(e){e.preventDefault(),t.classList.add("none")})),n.addEventListener("click",(function(e){e.preventDefault(),n.classList.add("none")}));var i,s,l,a,o,c,r,d,u,v=document.querySelector(".header__phone-hover"),f=document.querySelector(".header__mail-hover");for(v.addEventListener("click",(function(e){e.preventDefault(),v.classList.add("none")})),f.addEventListener("click",(function(e){e.preventDefault(),f.classList.add("none")})),a=(i=document.getElementsByClassName("custom-select")).length,s=0;s<a;s++){o=(c=i[s].getElementsByTagName("select")[0]).length,(r=document.createElement("DIV")).setAttribute("class","select-selected"),r.innerHTML=c.options[c.selectedIndex].innerHTML;var b=c.querySelectorAll("option");for(i[s].appendChild(r),(d=document.createElement("DIV")).setAttribute("class","select-items select-hide"),l=1;l<o;l++)(u=document.createElement("DIV")).classList.add("select-div"),u.dataset.tabTriggerMobile=b[l].value,u.innerHTML=c.options[l].innerHTML,u.addEventListener("click",(function(e){var t,n,i,s,l,a,o;for(e.preventDefault(),a=(s=this.parentNode.parentNode.getElementsByTagName("select")[0]).length,l=this.parentNode.previousSibling,n=0;n<a;n++)if(s.options[n].innerHTML==this.innerHTML){for(s.selectedIndex=n,l.innerHTML=this.innerHTML,o=(t=this.parentNode.getElementsByClassName("same-as-selected")).length,i=0;i<o;i++)t[i].removeAttribute("class");this.setAttribute("class","same-as-selected");break}l.click()})),d.appendChild(u);i[s].appendChild(d),r.addEventListener("click",(function(e){e.stopPropagation(),p(this),this.nextSibling.classList.toggle("select-hide"),this.classList.toggle("select-arrow-active")}))}function p(e){var t,n,i,s,l,a=[];for(t=document.getElementsByClassName("select-items"),n=document.getElementsByClassName("select-selected"),s=t.length,l=n.length,i=0;i<l;i++)e==n[i]?a.push(i):n[i].classList.remove("select-arrow-active");for(i=0;i<s;i++)a.indexOf(i)&&t[i].classList.add("select-hide")}document.addEventListener("click",p),document.querySelectorAll(".select-div[data-tab-trigger-mobile]").forEach((function(e){e.addEventListener("click",(function(e){e.preventDefault();var t=this.parentNode.parentNode.parentNode,n=document.querySelector('.cases__content[data-tab-content="'+this.dataset.tabTriggerMobile+'"]');t.querySelector(".is-open").classList.remove("is-open"),n.classList.add("is-open")}))}));var m=document.querySelectorAll(".advantages__label");m.forEach((function(e){e.addEventListener("click",(function(e){e.preventDefault(),m.forEach((function(e){e.classList.remove("advantages__active"),e.nextSibling.classList.remove("advantages__open")})),e.target.classList.add("advantages__active"),e.target.nextSibling.classList.add("advantages__open")}))}))}));var f=new WeakMap,b=new WeakMap,p=new WeakMap,m=new WeakMap,h=new WeakMap,y=new WeakMap,_=new WeakMap,w=new WeakSet,L=function(){function e(){var t,n,i=this,s=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),c(t=this,n=w),n.add(t),o(this,f,{writable:!0,value:void 0}),o(this,b,{writable:!0,value:'<div class="itc-modal-backdrop"><div class="itc-modal-content"><div class="itc-modal-header"><span class="itc-modal-btn-close" title="Закрыть">×</span></div><div class="itc-modal-body">{{content}}</div>{{footer}}</div></div>'}),o(this,p,{writable:!0,value:'<div class="itc-modal-footer">{{buttons}}</div>'}),o(this,m,{writable:!0,value:'<button type="button" class="{{class}}" data-action={{action}}>{{text}}</button>'}),o(this,h,{writable:!0,value:new Event("show.itc.modal",{bubbles:!0})}),o(this,y,{writable:!0,value:new Event("hide.itc.modal",{bubbles:!0})}),o(this,_,{writable:!0,value:!1}),u(this,f,document.createElement("div")),d(this,f).classList.add("itc-modal");var l=d(this,b).replace("{{title}}",s.title||"Новое окно");l=l.replace("{{content}}",s.content||"");var a=(s.footerButtons||[]).map((function(e){var t=d(i,m).replace("{{class}}",e.class);return(t=t.replace("{{action}}",e.action)).replace("{{text}}",e.text)})),v=a.length?d(this,p).replace("{{buttons}}",a.join("")):"";l=l.replace("{{footer}}",v),d(this,f).innerHTML=l,document.body.append(d(this,f)),d(this,f).addEventListener("click",r(this,w,g).bind(this))}var t,n,i;return t=e,(n=[{key:"show",value:function(){d(this,_)||(d(this,f).classList.add("itc-modal-show"),d(this,f).dispatchEvent(d(this,h)))}},{key:"hide",value:function(){d(this,f).classList.remove("itc-modal-show"),d(this,f).dispatchEvent(d(this,y)),document.body.style.position="",document.body.style.top=""}},{key:"dispose",value:function(){d(this,f).remove(d(this,f)),d(this,f).removeEventListener("click",r(this,w,g)),u(this,_,!0)}},{key:"setBody",value:function(e){d(this,f).querySelector(".itc-modal-body").innerHTML=e}},{key:"setTitle",value:function(e){d(this,f).querySelector(".itc-modal-title").innerHTML=e}}])&&s(t.prototype,n),i&&s(t,i),Object.defineProperty(t,"prototype",{writable:!1}),e}();function g(e){(e.target.closest(".itc-modal-btn-close")||e.target.classList.contains("itc-modal-backdrop"))&&this.hide()}var k=new L({content:'<div class="callback callback__modal"><div class="callback__block callback__block_2"><h3 class="callback__subtitle">Будем рады помочь</h3><form action="" class="callback__form"><label class="callback__label" for="name">Ваше имя</label><input class="callback__input" type="text" name="name" id="name-modal"><label class="callback__label" for="phone">Телефон</label><input class="callback__input" type="tel" name="phone" id="phone-modal"><label class="callback__label" for="message">Комментарий</label><textarea class="callback__input callback__input_text" name="message" id="message-modal" rows="3"></textarea><label class="callback__label callback__label_check" for="agree"><input class="callback__checkbox" type="checkbox" name="agree" id="agree-modal"><span class="callback__span"></span>Нажимая кнопку отправить заявку, даю согласие на обработку персональных данных*</label><button class="callback__btn btn btn-ok">Отправить заявку</button></form></div></div>'}),E=new L({content:'<div class="callback callback__modal"><div class="callback__block callback__block_2"><h3 class="callback__subtitle">Спасибо!</h3><div class="callback__label">Мы скоро с Вами свяжемся!</div></div></div>'}),S=document.querySelectorAll(".btn-show-modal"),q=document.querySelectorAll(".btn-ok");function i(e){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},i(e)}function T(e,t,n){return(t=l(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e){var t=a(e,"string");return"symbol"===i(t)?t:String(t)}function a(e,t){if("object"!==i(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var s=n.call(e,t||"default");if("object"!==i(s))return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}S.forEach((function(e){e.addEventListener("click",(function(e){e.preventDefault(),k.show()}))})),q.forEach((function(e){e.addEventListener("click",(function(e){e.preventDefault(),k.hide(),E.show()}))})),window.addEventListener("DOMContentLoaded",(function(){var e;new Swiper(".cases__swiper",{loop:!0,slidesPerView:1,navigation:{nextEl:".cases .swiper-button-next",prevEl:".cases .swiper-button-prev"}}),new Swiper(".hero__swiper",(T(e={speed:3500,loop:!0,slidesPerView:1,spaceBetween:30},"loop",!0),T(e,"effect","fade"),T(e,"fadeEffect",{crossFade:!0}),T(e,"autoplay",!0),e)),new Swiper(".clients__swiper",{direction:"horizontal",loop:!0,slidesPerView:3,effect:"slide",spaceBetween:20,breakpoints:{320:{slidesPerView:1,spaceBetween:0,slidesPerGroup:1},520:{slidesPerView:2,spaceBetween:32,slidesPerGroup:2},820:{slidesPerView:3,spaceBetween:32}},navigation:{nextEl:".clients .swiper-button-next",prevEl:".clients .swiper-button-prev"}}),new Swiper(".reviews__swiper",{direction:"horizontal",loop:!0,slidesPerView:3,effect:"slide",spaceBetween:10,breakpoints:{320:{slidesPerView:1,slidesPerGroup:1,spaceBetween:0},780:{slidesPerView:2},1020:{slidesPerView:3}},navigation:{nextEl:".reviews .swiper-button-next",prevEl:".reviews .swiper-button-prev"}})}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
